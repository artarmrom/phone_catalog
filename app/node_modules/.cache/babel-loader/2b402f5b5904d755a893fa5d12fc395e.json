{"ast":null,"code":"var _jsxFileName = \"/Users/aarmario/Documents/MyRepos/phone_catalog/app/src/Pages/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport firestore from '../../settings/firebase';\nimport firebase from 'firebase';\nimport PhoneList from '../PhoneList/PhoneList';\nimport { createPhone, getPhonesFromApi } from '../../routes/routes';\nimport './home.css';\nimport PhoneModal from \"../PhoneActions/PhoneModal/PhoneModal\";\nimport Loader from \"../../Components/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home(props) {\n  _s();\n\n  const [phones, setPhones] = useState([]);\n  const [nextId, setNextId] = useState([]);\n  useEffect(() => {\n    getPhones();\n  }, []);\n\n  const getPhones = async () => {\n    let phonesData = await getPhonesFromApi();\n    setPhones(phonesData);\n    calculateNextId(phonesData);\n  };\n\n  const setNewPhone = object => {\n    let copyPhone = [...phones];\n    copyPhone.push(object);\n    setPhones(copyPhone);\n    calculateNextId(copyPhone);\n  };\n\n  const editPhone = async object => {\n    let copyPhone = [...phones];\n    let foundPhone = copyPhone.findIndex(element => element.id === object.id);\n\n    if (object.name !== copyPhone[foundPhone].name) {\n      let deleteRef = firebase.storage().ref().child(copyPhone[foundPhone].name.trim() + '.png');\n      await deleteRef.delete();\n    }\n\n    copyPhone[foundPhone] = object;\n    setPhones(copyPhone);\n  };\n\n  const removePhoneFromList = async id => {\n    let copyPhone = [...phones];\n    let foundPhone = copyPhone.findIndex(element => element.id === id);\n    let deleteRef = firebase.storage().ref().child(copyPhone[foundPhone].name.trim() + '.png');\n    await deleteRef.delete();\n    copyPhone.splice(foundPhone, 1);\n    setPhones(copyPhone);\n    calculateNextId(copyPhone);\n  };\n\n  const calculateNextId = phonesData => {\n    setNextId(phonesData[phonesData.length - 1].id + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-catalog-list-title\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Phone Catalog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PhoneModal, {\n      type: \"create\",\n      id: nextId,\n      setPhone: setNewPhone,\n      saveData: createPhone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), phones.length > 0 ? phones.map(phone => {\n      return /*#__PURE__*/_jsxDEV(PhoneList, {\n        phone: phone,\n        removePhoneFromList: removePhoneFromList,\n        editPhone: editPhone\n      }, phone.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"jXnfrLZ0LkcjkjBTr3GHFKxEifU=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/aarmario/Documents/MyRepos/phone_catalog/app/src/Pages/Home/Home.js"],"names":["React","useEffect","useState","firestore","firebase","PhoneList","createPhone","getPhonesFromApi","PhoneModal","Loader","Home","props","phones","setPhones","nextId","setNextId","getPhones","phonesData","calculateNextId","setNewPhone","object","copyPhone","push","editPhone","foundPhone","findIndex","element","id","name","deleteRef","storage","ref","child","trim","delete","removePhoneFromList","splice","length","map","phone"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport firestore from '../../settings/firebase';\nimport firebase from 'firebase';\n\nimport PhoneList from '../PhoneList/PhoneList'\n\nimport {createPhone, getPhonesFromApi} from '../../routes/routes'\n\nimport './home.css';\nimport PhoneModal from \"../PhoneActions/PhoneModal/PhoneModal\";\nimport Loader from \"../../Components/Loader/Loader\";\n\nexport default function Home(props){\n    const [phones, setPhones] = useState([]);\n    const [nextId, setNextId] = useState([]);\n\n    useEffect(()=>{\n        getPhones();\n    },[])\n\n    const getPhones = async () =>{\n        let phonesData = await getPhonesFromApi()\n        setPhones(phonesData)\n        calculateNextId(phonesData)\n    }\n\n    const setNewPhone = (object) =>{\n        let copyPhone = [...phones]\n        copyPhone.push(object)\n        setPhones(copyPhone)\n        calculateNextId(copyPhone)\n    }\n\n    const editPhone = async (object) =>{\n        let copyPhone = [...phones]\n        let foundPhone = copyPhone.findIndex((element)=>element.id===object.id);\n        if(object.name !== copyPhone[foundPhone].name) {\n            let deleteRef = firebase.storage().ref().child(copyPhone[foundPhone].name.trim() + '.png');\n            await deleteRef.delete();\n        }\n        copyPhone[foundPhone]=object;\n        setPhones(copyPhone)\n    }\n\n    const removePhoneFromList = async (id) =>{\n        let copyPhone = [...phones]\n        let foundPhone = copyPhone.findIndex((element)=>element.id===id);\n        let deleteRef = firebase.storage().ref().child(copyPhone[foundPhone].name.trim()+'.png');\n        await deleteRef.delete();\n        copyPhone.splice(foundPhone,1);\n        setPhones(copyPhone)\n        calculateNextId(copyPhone)\n    }\n\n    const calculateNextId = (phonesData) =>{\n        setNextId(phonesData[phonesData.length-1].id+1)\n    }\n\n    return(\n        <div>\n            <div className='div-catalog-list-title'>\n                <p>Phone Catalog</p>\n            </div>\n            <PhoneModal type='create' id={nextId} setPhone={setNewPhone} saveData={createPhone}/>\n            {phones.length>0?\n                phones.map((phone)=>{\n                    return(\n                        <PhoneList key={phone.id} phone={phone} removePhoneFromList={removePhoneFromList} editPhone={editPhone}/>\n                    )\n                })\n            :<Loader/>}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}